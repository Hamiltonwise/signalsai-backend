name: Build Frontend + Backend and Deploy to EC2

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout backend repo
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # ✅ Inject .env file from GitHub Secrets
      - name: Create .env file
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env

      # 📦 Build backend
      - name: Install backend dependencies
        run: npm ci

      - name: Build backend
        run: npm run build

      # 🔁 Clone and build frontend
      - name: Clone frontend repo
        run: |
          git clone https://github.com/Hamiltonwise/signalsai.git frontend
          cd frontend
          npm ci
          npm run build
          cd ..

      # 🧩 Move frontend build into backend/public
      - name: Move frontend build into backend
        run: |
          rm -rf public || true
          mkdir -p public
          cp -r frontend/dist/* public/

      # 📦 Prepare deployment bundle
      - name: Prepare deploy bundle
        run: |
          mkdir -p bundle
          cp -r dist bundle/
          cp -r public bundle/
          cp -r ecosystem.config.js bundle/
          cp package*.json bundle/
          cp .env bundle/    # <-- include env file

      # 🧹 Clean EC2 target directory
      - name: Clean remote target dir
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          port: ${{ secrets.EC2_PORT }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            rm -rf ${{ secrets.TARGET_DIR }}/*
            mkdir -p ${{ secrets.TARGET_DIR }}

      # 🚀 Upload backend with frontend included
      - name: Upload bundle to EC2
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          port: ${{ secrets.EC2_PORT }}
          key: ${{ secrets.EC2_KEY }}
          source: "bundle/**"
          target: ${{ secrets.TARGET_DIR }}
          strip_components: 1

      # 🔁 Restart Node app with PM2
      - name: Start/Reload PM2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          port: ${{ secrets.EC2_PORT }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            source ~/.bashrc
            cd ${{ secrets.TARGET_DIR }}
            npm install --production
            pm2 reload ecosystem.config.js || pm2 start ecosystem.config.js
